(self.webpackChunk_a1b0be1d_cc5a_4ccb_aa4f_af239c9ba32f=self.webpackChunk_a1b0be1d_cc5a_4ccb_aa4f_af239c9ba32f||[]).push([["src_pwa_ReadonlyTable_jsx","src_web_FormField_jsx"],{413:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(416);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _web_FormField_jsx__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(942);\n\n\nfunction ReadonlyTablePwa(props) {\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", null, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_web_FormField_jsx__WEBPACK_IMPORTED_MODULE_1__["default"], props));\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ReadonlyTablePwa);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDEzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEI7QUFDbUI7QUFFN0MsU0FBU0UsZ0JBQWdCQSxDQUFDQyxLQUFLLEVBQUU7RUFDL0Isb0JBQ0VILDBEQUFBLDJCQUNFQSwwREFBQSxDQUFDQywwREFBUyxFQUFLRSxLQUFRLENBQ3BCLENBQUM7QUFFVjtBQUVBLGlFQUFlRCxnQkFBZ0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fYTFiMGJlMWQtY2M1YS00Y2NiLWFhNGYtYWYyMzljOWJhMzJmLy4vc3JjL3B3YS9SZWFkb25seVRhYmxlLmpzeD8zNjBkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCBGb3JtRmllbGQgZnJvbSBcIi4uL3dlYi9Gb3JtRmllbGQuanN4XCI7XG5cbmZ1bmN0aW9uIFJlYWRvbmx5VGFibGVQd2EocHJvcHMpIHtcbiAgcmV0dXJuIChcbiAgICA8ZGl2PlxuICAgICAgPEZvcm1GaWVsZCB7Li4ucHJvcHN9IC8+XG4gICAgPC9kaXY+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFJlYWRvbmx5VGFibGVQd2E7XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJGb3JtRmllbGQiLCJSZWFkb25seVRhYmxlUHdhIiwicHJvcHMiLCJjcmVhdGVFbGVtZW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///413\n')},942:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RichTextEditorWidget)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(416);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\nfunction RichTextEditorWidget() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _props$field = props.field,\n    field = _props$field === void 0 ? {} : _props$field,\n    _props$actions = props.actions,\n    actions = _props$actions === void 0 ? {\n      updateValue: function updateValue() {}\n    } : _props$actions,\n    _props$readonly = props.readonly,\n    readonly = _props$readonly === void 0 ? false : _props$readonly,\n    _props$disabled = props.disabled,\n    disabled = _props$disabled === void 0 ? false : _props$disabled,\n    _props$errors = props.errors,\n    errors = _props$errors === void 0 ? null : _props$errors,\n    _props$theme = props.theme,\n    theme = _props$theme === void 0 ? {} : _props$theme,\n    _props$color = props.color,\n    color = _props$color === void 0 ? \"#f8f8f8\" : _props$color,\n    _props$parameters = props.parameters,\n    parameters = _props$parameters === void 0 ? {} : _props$parameters,\n    _props$value = props.value,\n    value = _props$value === void 0 ? \"\" : _props$value;\n  var updateValue = actions.updateValue;\n  var editorRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setIsFocused = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)('formatted'),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pasteMode = _useState4[0],\n    setPasteMode = _useState4[1]; // 'formatted' or 'plain'\n\n  // ðŸŽ¨ CUSTOMIZABLE COLORS - Change these to match your design\n  var colors = {\n    // Main field colors\n    fieldBackground: color || \"#f8f8f8\",\n    fieldBorder: \"#ff6600\",\n    // Changed from orange to a custom orange\n    fieldBorderWidth: \"2px\",\n    // Changed from 3px\n\n    // Editor colors\n    editorBackground: \"#ffffff\",\n    editorBorder: \"#e0e0e0\",\n    editorBorderFocused: \"#007bff\",\n    editorText: \"#333333\",\n    // Toolbar colors\n    toolbarBackground: \"#f8f9fa\",\n    toolbarBorder: \"#dee2e6\",\n    // Button colors\n    buttonBackground: \"#ffffff\",\n    buttonBorder: \"#ced4da\",\n    buttonHover: \"#e9ecef\",\n    buttonActive: \"#007bff\",\n    buttonText: \"#495057\",\n    // Error colors\n    errorText: \"#dc3545\",\n    // Disabled colors\n    disabledBackground: \"#f5f5f5\",\n    disabledText: \"#6c757d\"\n  };\n\n  // Toolbar button configuration with better tooltips (lists removed)\n  var toolbarButtons = [{\n    command: 'bold',\n    icon: 'B',\n    title: 'Bold (Ctrl+B)',\n    shortcut: 'Ctrl+B'\n  }, {\n    command: 'italic',\n    icon: 'I',\n    title: 'Italic (Ctrl+I)',\n    shortcut: 'Ctrl+I'\n  }, {\n    command: 'underline',\n    icon: 'U',\n    title: 'Underline (Ctrl+U)',\n    shortcut: 'Ctrl+U'\n  }, {\n    command: 'separator'\n  }, {\n    command: 'formatBlock',\n    value: 'h1',\n    icon: 'H1',\n    title: 'Heading 1 - Large title'\n  }, {\n    command: 'formatBlock',\n    value: 'h2',\n    icon: 'H2',\n    title: 'Heading 2 - Medium title'\n  }, {\n    command: 'formatBlock',\n    value: 'p',\n    icon: 'P',\n    title: 'Paragraph - Normal text'\n  }, {\n    command: 'separator'\n  }, {\n    command: 'justifyLeft',\n    icon: 'â«·',\n    title: 'Align Left - Left align text'\n  }, {\n    command: 'justifyCenter',\n    icon: 'â«¸',\n    title: 'Align Center - Center align text'\n  }, {\n    command: 'justifyRight',\n    icon: 'â«¸',\n    title: 'Align Right - Right align text'\n  }, {\n    command: 'separator'\n  }, {\n    command: 'removeFormat',\n    icon: 'âœ•',\n    title: 'Clear Formatting - Remove all formatting'\n  }, {\n    command: 'separator'\n  }, {\n    command: 'togglePasteMode',\n    icon: pasteMode === 'formatted' ? 'ðŸ“‹+' : 'ðŸ“‹',\n    title: pasteMode === 'formatted' ? 'Paste Mode: Keep Formatting (Click to change)' : 'Paste Mode: Plain Text (Click to change)'\n  }];\n\n  // Execute editor command\n  var executeCommand = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (command) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (!editorRef.current) return;\n    if (command === 'togglePasteMode') {\n      setPasteMode(function (prev) {\n        return prev === 'formatted' ? 'plain' : 'formatted';\n      });\n      return;\n    }\n\n    // Ensure editor is focused first\n    editorRef.current.focus();\n    if (command === 'formatBlock') {\n      document.execCommand('formatBlock', false, value);\n    } else {\n      document.execCommand(command, false, value);\n    }\n\n    // Update the value after command execution\n    setTimeout(function () {\n      if (editorRef.current) {\n        updateValue(editorRef.current.innerHTML);\n      }\n    }, 10);\n  }, [updateValue, setPasteMode]);\n\n  // Handle content changes\n  var handleInput = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function () {\n    if (editorRef.current) {\n      updateValue(editorRef.current.innerHTML);\n    }\n  }, [updateValue]);\n\n  // Handle paste events - preserve formatting like Google Docs\n  var handlePaste = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function (e) {\n    e.preventDefault();\n    if (pasteMode === 'plain') {\n      // Plain text mode - strip all formatting\n      var textData = e.clipboardData.getData('text/plain');\n      document.execCommand('insertText', false, textData);\n    } else {\n      // Formatted mode - preserve formatting like Google Docs\n      var htmlData = e.clipboardData.getData('text/html');\n      var _textData = e.clipboardData.getData('text/plain');\n      if (htmlData) {\n        // Clean up the HTML but preserve basic formatting\n        var cleanHtml = cleanPastedHtml(htmlData);\n        document.execCommand('insertHTML', false, cleanHtml);\n      } else if (_textData) {\n        // Fallback to plain text\n        document.execCommand('insertText', false, _textData);\n      }\n    }\n    handleInput();\n  }, [handleInput, pasteMode]);\n\n  // Clean HTML from external sources while preserving formatting (lists removed from allowed tags)\n  var cleanPastedHtml = function cleanPastedHtml(html) {\n    // Create a temporary element to parse HTML\n    var temp = document.createElement('div');\n    temp.innerHTML = html;\n\n    // Remove dangerous elements and attributes (ul, ol, li removed from allowed tags)\n    var allowedTags = ['p', 'br', 'strong', 'b', 'em', 'i', 'u', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'a', 'span', 'div', 'img'];\n    var allowedAttributes = ['src', 'alt', 'width', 'height', 'style'];\n\n    // Remove script tags and other dangerous elements\n    var scripts = temp.querySelectorAll('script, style, meta, link');\n    scripts.forEach(function (el) {\n      return el.remove();\n    });\n\n    // Remove list elements specifically\n    var listElements = temp.querySelectorAll('ul, ol, li');\n    listElements.forEach(function (el) {\n      // Replace list items with paragraphs, lists with divs\n      if (el.tagName.toLowerCase() === 'li') {\n        var p = document.createElement('p');\n        p.innerHTML = el.innerHTML;\n        el.parentNode.replaceChild(p, el);\n      } else {\n        // Replace ul/ol with div\n        var div = document.createElement('div');\n        div.innerHTML = el.innerHTML;\n        el.parentNode.replaceChild(div, el);\n      }\n    });\n\n    // Clean up attributes but keep basic styling\n    var allElements = temp.querySelectorAll('*');\n    allElements.forEach(function (el) {\n      // Remove non-allowed tags by replacing with their content\n      if (!allowedTags.includes(el.tagName.toLowerCase())) {\n        el.outerHTML = el.innerHTML;\n        return;\n      }\n\n      // Clean attributes\n      var attrs = Array.from(el.attributes);\n      attrs.forEach(function (attr) {\n        if (!allowedAttributes.includes(attr.name.toLowerCase())) {\n          el.removeAttribute(attr.name);\n        }\n      });\n\n      // Clean up style attribute to only allow safe styles\n      if (el.hasAttribute('style')) {\n        var style = el.getAttribute('style');\n        var cleanStyle = cleanStyleAttribute(style);\n        if (cleanStyle) {\n          el.setAttribute('style', cleanStyle);\n        } else {\n          el.removeAttribute('style');\n        }\n      }\n\n      // Handle images - ensure they're responsive and safe\n      if (el.tagName.toLowerCase() === 'img') {\n        // Add responsive styling to images\n        var currentStyle = el.getAttribute('style') || '';\n        var newStyle = currentStyle + '; max-width: 100%; height: auto; display: block; margin: 10px 0;';\n        el.setAttribute('style', newStyle);\n\n        // Ensure alt text exists for accessibility\n        if (!el.hasAttribute('alt')) {\n          el.setAttribute('alt', 'Pasted image');\n        }\n      }\n    });\n    return temp.innerHTML;\n  };\n\n  // Clean style attributes to only allow safe CSS properties\n  var cleanStyleAttribute = function cleanStyleAttribute(style) {\n    var allowedProperties = ['color', 'background-color', 'font-weight', 'font-style', 'text-decoration', 'font-size', 'font-family', 'text-align', 'margin', 'padding', 'width', 'height', 'max-width', 'max-height', 'display', 'border', 'border-radius'];\n    var declarations = style.split(';');\n    var cleanDeclarations = declarations.filter(function (decl) {\n      var _decl$split$map = decl.split(':').map(function (s) {\n          return s.trim();\n        }),\n        _decl$split$map2 = _slicedToArray(_decl$split$map, 1),\n        property = _decl$split$map2[0];\n      return allowedProperties.includes(property);\n    });\n    return cleanDeclarations.join('; ');\n  };\n\n  // Set initial content\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\n    if (editorRef.current && value !== undefined) {\n      var currentContent = editorRef.current.innerHTML;\n      var newContent = value || '';\n      if (currentContent !== newContent) {\n        editorRef.current.innerHTML = newContent;\n      }\n    }\n  }, [value]);\n\n  // Toolbar component with improved styling and hover effects\n  var Toolbar = function Toolbar() {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: '12px',\n        borderBottom: \"1px solid \".concat(colors.toolbarBorder),\n        backgroundColor: colors.toolbarBackground,\n        borderRadius: '8px 8px 0 0',\n        gap: '6px',\n        boxShadow: '0 1px 3px rgba(0,0,0,0.1)'\n      }\n    }, toolbarButtons.map(function (button, index) {\n      if (button.command === 'separator') {\n        return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n          key: index,\n          style: {\n            width: '1px',\n            height: '28px',\n            backgroundColor: colors.toolbarBorder,\n            margin: '0 6px'\n          }\n        });\n      }\n      return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"button\", {\n        key: index,\n        type: \"button\",\n        onMouseDown: function onMouseDown(e) {\n          return e.preventDefault();\n        } // Prevent editor blur\n        ,\n        onClick: function onClick() {\n          return executeCommand(button.command, button.value);\n        },\n        disabled: disabled || readonly,\n        title: button.title // This creates the hover tooltip!\n        ,\n        style: {\n          padding: '6px 10px',\n          border: \"1px solid \".concat(colors.buttonBorder),\n          backgroundColor: colors.buttonBackground,\n          borderRadius: '6px',\n          cursor: disabled || readonly ? 'not-allowed' : 'pointer',\n          fontSize: '13px',\n          fontWeight: button.command === 'bold' ? 'bold' : 'normal',\n          fontStyle: button.command === 'italic' ? 'italic' : 'normal',\n          textDecoration: button.command === 'underline' ? 'underline' : 'none',\n          opacity: disabled || readonly ? 0.5 : 1,\n          minWidth: '32px',\n          height: '32px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          transition: 'all 0.2s ease',\n          color: colors.buttonText\n        }\n        // Add hover effects with onMouseEnter/Leave since CSS :hover doesn't work in inline styles\n        ,\n        onMouseEnter: function onMouseEnter(e) {\n          if (!disabled && !readonly) {\n            e.target.style.backgroundColor = colors.buttonHover;\n            e.target.style.borderColor = colors.buttonActive;\n            e.target.style.transform = 'translateY(-1px)';\n            e.target.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';\n          }\n        },\n        onMouseLeave: function onMouseLeave(e) {\n          if (!disabled && !readonly) {\n            e.target.style.backgroundColor = colors.buttonBackground;\n            e.target.style.borderColor = colors.buttonBorder;\n            e.target.style.transform = 'translateY(0)';\n            e.target.style.boxShadow = 'none';\n          }\n        }\n      }, button.icon);\n    }));\n  };\n  if (readonly) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        outline: \"3px solid orange\",\n        backgroundColor: color || \"#f8f8f8\",\n        padding: \"10px\",\n        borderRadius: \"5px\",\n        width: \"100%\"\n      }\n    }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", null, (field === null || field === void 0 ? void 0 : field.name) || \"Rich Text Editor\", (field === null || field === void 0 ? void 0 : field.isRequired) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n      style: {\n        color: \"red\"\n      }\n    }, \"*\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n      style: {\n        padding: \"15px\",\n        backgroundColor: \"#f9f9f9\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"5px\",\n        minHeight: \"100px\",\n        fontSize: \"14px\",\n        lineHeight: \"1.5\"\n      },\n      dangerouslySetInnerHTML: {\n        __html: value || \"No content entered\"\n      }\n    }), errors && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n      style: {\n        color: \"red\",\n        marginTop: \"5px\"\n      }\n    }, errors));\n  }\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    style: {\n      outline: \"3px solid orange\",\n      backgroundColor: color || \"#f8f8f8\",\n      padding: \"10px\",\n      borderRadius: \"5px\",\n      width: \"100%\"\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"h3\", null, (field === null || field === void 0 ? void 0 : field.name) || \"Rich Text Editor\", (field === null || field === void 0 ? void 0 : field.isRequired) && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"*\")), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    style: {\n      border: isFocused ? '2px solid #007bff' : '1px solid #ddd',\n      borderRadius: '5px',\n      backgroundColor: '#fff',\n      overflow: 'hidden',\n      transition: 'border-color 0.2s ease'\n    }\n  }, /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Toolbar, null), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"div\", {\n    ref: editorRef,\n    contentEditable: !disabled && !readonly,\n    onInput: handleInput,\n    onPaste: handlePaste,\n    onFocus: function onFocus() {\n      return setIsFocused(true);\n    },\n    onBlur: function onBlur() {\n      return setIsFocused(false);\n    },\n    style: {\n      minHeight: '200px',\n      maxHeight: '400px',\n      padding: '15px',\n      fontSize: '14px',\n      lineHeight: '1.5',\n      outline: 'none',\n      backgroundColor: disabled ? '#f5f5f5' : '#fff',\n      color: disabled ? '#666' : '#000',\n      cursor: disabled ? 'not-allowed' : 'text',\n      overflowY: 'auto',\n      overflowX: 'hidden',\n      wordWrap: 'break-word'\n    },\n    \"data-placeholder\": (field === null || field === void 0 ? void 0 : field.placeholder) || 'Enter your text here...'\n  })), errors && /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"p\", {\n    style: {\n      color: \"red\",\n      marginTop: \"5px\"\n    }\n  }, errors), /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"style\", {\n    jsx: true\n  }, \"\\n        [contenteditable]:empty:before {\\n          content: attr(data-placeholder);\\n          color: #999;\\n          font-style: italic;\\n        }\\n        \\n        [contenteditable] h1 {\\n          font-size: 24px;\\n          font-weight: bold;\\n          margin: 10px 0;\\n        }\\n        \\n        [contenteditable] h2 {\\n          font-size: 20px;\\n          font-weight: bold;\\n          margin: 8px 0;\\n        }\\n        \\n        [contenteditable] p {\\n          margin: 5px 0;\\n        }\\n        \\n        [contenteditable] a {\\n          color: #007bff;\\n          text-decoration: underline;\\n        }\\n        \\n        [contenteditable] a:hover {\\n          color: #0056b3;\\n          text-decoration: underline;\\n        }\\n      \"));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///942\n")}}]);